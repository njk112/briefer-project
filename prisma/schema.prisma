// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String              @id @default(uuid())
  email             String              @unique
  UserBriefingOrder UserBriefingOrder[]
}

model UserBriefingOrder {
  id                String            @id @default(uuid())
  User              User              @relation(fields: [userId], references: [id])
  userId            String
  totalVideos       Int
  videosProccessed  Int               @default(0)
  dateCreated       DateTime          @default(now())
  YoutubeVideo      YoutubeVideo[]
  BrieferPdfReports BrieferPdfReport?
}

model YoutubeVideo {
  id                  String               @id @default(uuid())
  youtubeId           String               @unique
  title               String
  videoAuthor         String
  timesAccessed       Int                  @default(0)
  dateCreated         DateTime             @default(now())
  UserBriefingOrder   UserBriefingOrder    @relation(fields: [userBriefingOrderId], references: [id])
  userBriefingOrderId String
  YoutubeAudioLink    YoutubeAudioLink?
  YoutubeTextLink     YoutubeTextLink?
  YoutubeVideoSummary YoutubeVideoSummary?
  BrieferPdfReports   BrieferPdfReport[]   @relation("VideoBrieferReports")
}

model YoutubeAudioLink {
  id             String       @id @default(uuid())
  audioUrl       String       @unique
  youtubeId      String       @unique
  timesAccessed  Int          @default(0)
  YoutubeVideo   YoutubeVideo @relation(fields: [youtubeVideoId], references: [id])
  dateCreated    DateTime     @default(now())
  youtubeVideoId String       @unique
}

model YoutubeTextLink {
  id             String       @id @default(uuid())
  youtubeId      String       @unique
  timesAccessed  Int          @default(0)
  textUrl        String       @unique
  YoutubeVideo   YoutubeVideo @relation(fields: [youtubeVideoId], references: [id])
  dateCreated    DateTime     @default(now())
  youtubeVideoId String       @unique
}

model YoutubeVideoSummary {
  id             String       @id @default(uuid())
  youtubeId      String       @unique
  timesAccessed  Int          @default(0)
  summary        String
  YoutubeVideo   YoutubeVideo @relation(fields: [youtubeVideoId], references: [id])
  dateCreated    DateTime     @default(now())
  youtubeVideoId String       @unique
}

model BrieferPdfReport {
  id                  String            @id @default(uuid())
  pdfUrl              String            @unique
  fileName            String
  isSent              Boolean           @default(false)
  timesAccessed       Int               @default(0)
  YoutubeVideo        YoutubeVideo[]    @relation("VideoBrieferReports")
  dateCreated         DateTime          @default(now())
  UserBriefingOrder   UserBriefingOrder @relation(fields: [userBriefingOrderId], references: [id])
  userBriefingOrderId String            @unique
}
